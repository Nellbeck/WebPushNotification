@page
@model LoginModel

@{
    ViewData["Title"] = "Log in";
}

<h1>ChatMaster</h1>
<hr />
<h3>
    This website shows how web push notifications works with the help of a public chat that's based on SignalR. 
    </h3>
    <h3>
    The main reason why we built this website is to understand how Web Push Notification works.
</h3>
    <img src="https://qodeinteractive.com/magazine/wp-content/uploads/2021/03/What-Are-Push-Notifications.jpg" alt="notification" style="max-width:100%; height:auto; background-color:transparent;" /> <br />
<h3>
    You can also install it as an app on both your computer and on your phone. 
</h3>
<h3>    
    How to do that depends on what browser you're on. 
    </h3>
    <h3>
    On most phones you get the option to install it by default.
</h3>
<h2></h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <section>

            <h2 id="toggle-form" style="cursor: pointer;">Would you like to test our web app? Click here!</h2>
            <hr />
            <div id="form-container" style="display:none;">
            <form id="account" method="post">
                <h3>Please log in if you want test it out.</h3>
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Input.Email"></label>
                    <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" />
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.Password"></label>
                    <input asp-for="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" />
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <div class="checkbox">
                        <label asp-for="Input.RememberMe">
                            <input asp-for="Input.RememberMe" />
                            @Html.DisplayNameFor(m => m.Input.RememberMe)
                        </label>
                    </div>
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Log in</button>
                </div>
                <div class="form-group">
                    <p>
                        <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">Register as a new user</a>
                    </p>
                </div>
            </form>
            </div>
        </section>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h3></h3>
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <h3 id="toggle-webpush" style="cursor: pointer;">What is a Web Push Notification?</h3>
                        <p id="form-webpush" style="display:none;">
                            A web push notification is a message or alert sent from a server to a device (like a smartphone, tablet, or desktop) to deliver real-time updates or notifications, even when the app or website isn't open. <br />
                            Push notifications "push" information to users in a way that is direct and engaging, often prompting them to take an action, like opening an app, checking a message, or responding to an alert.
                        </p>
                        <hr />
                        <h3 id="toggle-signalr" style="cursor: pointer;">What is SignalR?</h3>
                        <p id="form-signalr" style="display:none;">
                            SignalR is an open-source library for ASP.NET that enables real-time web functionality in your applications. It allows servers to push content to connected clients instantly, rather than having clients repeatedly request data from the server (polling). <br />
                            SignalR is designed to make it easier to implement real-time communication between the server and clients, which is useful for applications that require frequent updates, such as live chat, real-time notifications, multiplayer games, or live data feeds.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function scrollToElement(element) {
            const rect = element.getBoundingClientRect();
            const offsetTop = rect.top + window.scrollY;

            window.scrollTo({
                top: offsetTop,
                behavior: "smooth"
            });
        }

        // Toggle the login form
        document.getElementById("toggle-form").addEventListener("click", function () {
            var formContainer = document.getElementById("form-container");

            if (formContainer.style.display === "none") {
                formContainer.style.display = "block";
            } else {
                formContainer.style.display = "none";
            }
            scrollToElement(formContainer);
        });

        document.getElementById("toggle-signalr").addEventListener("click", function () {
            var formContainer = document.getElementById("form-signalr");

            if (formContainer.style.display === "none") {
                formContainer.style.display = "block";
            } else {
                formContainer.style.display = "none";
            }
            scrollToElement(formContainer);
        });

        document.getElementById("toggle-webpush").addEventListener("click", function () {
            var formContainer = document.getElementById("form-webpush");

            if (formContainer.style.display === "none") {
                formContainer.style.display = "block";
            } else {
                formContainer.style.display = "none";
            }
            scrollToElement(formContainer);
        });

        // Automatically open and scroll to the login form if login failed
        document.addEventListener("DOMContentLoaded", function () {
            const loginFailed = @Json.Serialize(Model.LoginFailed);
            if (loginFailed) {
                const formContainer = document.getElementById("form-container");
                const toggleForm = document.getElementById("toggle-form");

                formContainer.style.display = "block";

                scrollToElement(toggleForm);
            }
        });
    </script>
}

